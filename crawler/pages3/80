https://thayer.github.io/engs50/Notes/cohesion/activity.html
3
8473
<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>Activity - Cohesion and Coupling</title>
  <meta name="description" content="In Engs 50 you will learn how to design & build large, reliable, maintainable, and understandable software systems.  In the process you will learn to program in C with Unix development tools.
">

  <link rel="shortcut icon" href="/engs50/50.png" />
  <link rel="stylesheet" href="/engs50/css/main.css">
  <link rel="canonical" href="/engs50/Notes/cohesion/activity.html">
</head>


  <body>

    <header class="site-header">

    <a class="site-title" href="/engs50/">
      <img width=48 align=center src="/engs50/50.png" alt="icon">
      Engs50 (CS50)
    </a>

    <nav class="site-nav">
      [<a href="/engs50/Labs/">Labs</a>]
      [<a href="/engs50/Notes/">Notes</a>]
      [<a href="/engs50/Reading/">Reading</a>]
      [<a href="/engs50/Resources/">Resources</a>]
			[<a href="/engs50/Examples/">Examples</a>]
   </nav>

</header>


    <div class="page-content">
      <div class="wrapper">
        <article class="post">

  <header class="post-header">
    <h1 class="post-title">Activity - Cohesion and Coupling</h1>
  </header>

  <div class="post-content">
    <p>With your group, take a look at the <a href="/engs50/Notes/cohesion/example.c">example</a> code and comment on its naming, cohesion, and coupling.
The code is reproduced below.</p>

<!--See [Solution](solution.html).-->

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// pseudo-code from a calendar/datebook application
</span>
<span class="k">typedef</span> <span class="k">struct</span> <span class="n">date</span> <span class="n">date_t</span><span class="p">;</span>
<span class="k">typedef</span> <span class="k">struct</span> <span class="n">calendar</span> <span class="n">calendar_t</span><span class="p">;</span>
<span class="k">typedef</span> <span class="k">struct</span> <span class="n">event</span> <span class="n">event_t</span><span class="p">;</span>

<span class="c1">// given one date, compute the next date;
// account for leap years, etc.
</span><span class="n">date_t</span> <span class="o">*</span><span class="n">date_next</span><span class="p">(</span><span class="n">date_t</span> <span class="o">*</span><span class="n">day</span><span class="p">);</span>

<span class="c1">// compute the number of days from "this" date until "that" date
</span><span class="kt">int</span> <span class="n">date_ComputeDaysUntil</span><span class="p">(</span><span class="k">const</span> <span class="n">date_t</span> <span class="o">*</span><span class="n">this</span><span class="p">,</span> <span class="k">const</span> <span class="n">date_t</span> <span class="o">*</span><span class="n">that</span><span class="p">);</span>

<span class="c1">// return current date
</span><span class="n">date_t</span> <span class="o">*</span><span class="n">date_today</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="c1">// print calendar
</span><span class="kt">void</span> <span class="nf">calendar_print1</span><span class="p">(</span><span class="n">calendar_t</span> <span class="o">*</span><span class="n">cal</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// print the month name
</span>  <span class="c1">// print the day names 
</span>  <span class="c1">// for each row, print the dates in that row
</span><span class="p">}</span>

<span class="c1">// print calendar
</span><span class="kt">void</span> <span class="nf">calendar_print2</span><span class="p">(</span><span class="n">calendar_t</span> <span class="o">*</span><span class="n">cal</span><span class="p">,</span> <span class="kt">int</span> <span class="n">which</span><span class="p">,</span> <span class="n">date_t</span> <span class="o">*</span><span class="n">day</span><span class="p">)</span> 
<span class="p">{</span>
  <span class="c1">// if which==1 
</span>  <span class="c1">//   print the month name
</span>  <span class="c1">//   print the day names 
</span>  <span class="c1">//   for each row, print the dates in that row
</span>  <span class="c1">// else if which==2
</span>  <span class="c1">//   print the month name, day name, and day number
</span>  <span class="c1">//   print the events occurring on that day
</span><span class="p">}</span>

<span class="c1">// print calendar
</span><span class="kt">void</span> <span class="nf">calendar_print3</span><span class="p">(</span><span class="n">calendar_t</span> <span class="o">*</span><span class="n">cal</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// print the month name, day name, and day number
</span>  <span class="c1">// foreach event occurring on that day
</span>  <span class="c1">//   print the time of the event
</span>  <span class="c1">//   print the type of event
</span>  <span class="c1">//   print the description of the event
</span><span class="p">}</span>

<span class="kt">void</span> <span class="nf">DoPrintBook</span><span class="p">(</span><span class="n">calendar_t</span> <span class="o">*</span><span class="n">cal</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">intro</span><span class="p">,</span>
		 <span class="n">image_t</span> <span class="o">*</span><span class="n">frontCover</span><span class="p">,</span> <span class="n">image_t</span> <span class="o">*</span><span class="n">backCover</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// print the frontCover
</span>  <span class="c1">// print the intro
</span>  <span class="c1">// foreach month
</span>  <span class="c1">//   foreach day of that month
</span>  <span class="c1">//     calendar_print2(cal, 2, day);
</span>  <span class="c1">// print the backCover
</span><span class="p">}</span>

<span class="n">calendar_t</span> <span class="n">theCalendar</span><span class="p">;</span>      <span class="c1">// the calendar we use below
</span>
<span class="kt">void</span> <span class="nf">Initialize</span><span class="p">(</span><span class="n">string</span> <span class="n">filename</span><span class="p">,</span> <span class="n">window_t</span> <span class="o">*</span><span class="n">window</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// initialize theCalendar
</span>  <span class="c1">// for each event read from the file
</span>  <span class="c1">//   add event to the calendar
</span>  <span class="c1">// initialize the window
</span>  <span class="c1">// create some buttons on the window
</span>  <span class="c1">// current date =  Today()
</span>  <span class="c1">// display the current day in window
</span>  <span class="c1">// look for any events in the next hour
</span>  <span class="c1">//    pop up dialog box for each such event 
</span>  <span class="c1">// Update(cal, window);
</span><span class="p">}</span>

<span class="kt">void</span> <span class="nf">Update</span><span class="p">(</span><span class="n">date_t</span> <span class="o">*</span><span class="n">today</span><span class="p">,</span> <span class="n">window_t</span> <span class="o">*</span><span class="n">window</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// check the current time
</span>  <span class="c1">// look through theCalendar.eventlist for events on date "today"
</span>  <span class="c1">//   if some events are now in the past, change their state to "past"
</span>  <span class="c1">//   update today's events on the window
</span><span class="p">}</span>
</code></pre></div></div>

  </div>

</article>

      </div>
    </div>

    <footer class="site-footer">

  <div class="wrapper">

    <h2 class="footer-heading">Engs50 (CS50) -- Dartmouth College</h2>

    <p> <font size=-1>
    	This version of the course is based upon those designed by
    	Professors Palmer, Kotz, Zhou, Campbell, and Balkcom.
	I am deeply indebted to these outstanding educators.
    -- <a href="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">Stephen Taylor</a>
       </font>
    </p>
    <p><small>This page was last updated on <strong>2018-10-10</strong> at <strong>18:07</strong>.</small></p>
  </div>

</footer>


  </body>

</html>

